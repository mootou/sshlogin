
If we have a lot of servers to manage, just like:
	group1 1.1.1.1
	group1 1.1.1.2
	group1 1.1.1.3
	group2 2.2.2.2
	group3 3.3.3.3

sshlogin support most operations on these servers
	show all servers:    sshlogin -s
	login a server:      sshlogin -c test
	add a server:        sshlogin -a test 1.1.1.1 phy
	add servers:         sshlogin -A test 1.1.1 1 3 phy
	scp file to remote:  sshlogin -t 2.2.2.2 /local/file
	scp file to local:   sshlogin -r 2.2.2.2 /remote/file /local/
	scp file to a group: sshlogin -T (test|all) /local/file
	ssh a cmd on remote: sshlogin -x 2.2.2.2 "ls /data1"
	ssh a cmd on group:  sshlogin -X (test|all) "ls /data1"

Please change USER and PASSWORD in sshlogin.c, then install



First, we must add servers to sshlogininfo, for convenience, you can directly edit /home/sshlogininfo in the specified format
	$ sshlogin -a group1 1.1.1.1 "give a note"
		/*
		$ sshlogin -c group1
			num   address   group   note
			1     1.1.1.1   group1  give a note
		*/

	$ sshlogin -A group1 1.1.1 2 3 "add two servers to group1"
		/*
		$ sshlogin -c group1
			num   address   group   note
			1     1.1.1.1   group1  give a note
			2     1.1.1.2   group1  add two servers to group1
			2     1.1.1.3   group1  add two servers to group1
		*/
	
Second, we can use "sshlogin -c group" to login, as shown above

Then,
Scp (-r) localfile to the specified server:/home/USER/
	$ sshlogin -t 1.1.1.1 localfile

Scp (-r) localfile to a group of servers:/home/USER/
	$ sshlogin -T group localfile

Scp (-r) remote file to local
	$ sshlogin -r 1.1.1.1 /remote_path/ /local_path/

Ssh commands on remote with sudo
	$sshlogin -x 1.1.1.1 "ls"

Ssh commands on group with sudo
	$sshlogin -X group1 "ls"

